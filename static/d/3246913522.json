{"data":{"jobs":{"edges":[{"node":{"frontmatter":{"title":"Embedded Software Engineer","company":"Xilinx","location":"San Jose, CA","range":"October 2018 - Present","url":"https://www.xilinx.com/"},"html":"<ul>\n<li>Developing Bare Metal and Linux drivers for AI Engine components using Xilinx ACAPs. Implementing APIs for interrupt-handling for AI- Engine.</li>\n<li>Contributing to the architecture and design of the overall embedded software stack for AI-Engine solutions.</li>\n<li>Developing heterogeneous memory management solutions for asynchronous multi-processing platforms. Optimizing the solutions developed for\nperformance and designing them for scalability.</li>\n<li>Contributing to all the phases of software development, from requirement gathering, analysis, design, development, testing and final release to\ncustomers.</li>\n<li>Working with different teams to identify problems and delivering software solutions in line with product roadmap on time with high quality.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Design and Verification Volunteer","company":"HDL Express","location":"Canby, OR","range":"August 2018 - September 2018","url":"http://www.hdlexpress.com/"},"html":"<ul>\n<li>Designed, tested, and debugged new Out of Order CPU. Based on a new method of dynamic instruction scheduling algorithm called the TIP Algorithm.</li>\n<li>Simulated, documentated, and researched tools which may be used to aid in this development effort.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Firmware Engineering Intern","company":"Tesla","location":"Palo Alto, CA","range":"November 2017 - June 2018","url":"https://www.tesla.com/"},"html":"<p>Worked independently as well as in a team environment to design, develop and validate, validation infrastructure for Tesla Model S, Model X, and Model 3.</p>\n<ul>\n<li>Developed firmware for ARM-based CAN router to inject faults, modify/corrupt CAN message, or make ECUs go MIA. Added capabilities enabled the existing dyno platform to validate the Electronic Stability Programme (ESP) and Brake Booster (iBooster) functionality at the system level.</li>\n<li>Created a testing framework to automate firmware validation of the Redundant Electronic Brake Request (R-EBR) feature.</li>\n<li>Designed and implemented firmware for the vehicle lock state machine for automated firmware validation. These different behavioral state models were the alarm control model, vehicle locking/unlocking model, NFC, and BLE authentication model, multidoor unlock model, and doors and windows model.</li>\n<li>Developed hardware to integrate the behavioral models in the existing testing framework such that it guarantees precise control over various security components.</li>\n<li>Developed a Jenkins pipeline to detect new firmware builds, OTA update them on a vehicle, test critical features and upload results for nightly automation testing.</li>\n<li>Improved and supported the health of testing platforms by troubleshooting bugs.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Embedded Systems Intern","company":"Sharpe Energy Solutions","location":"Ashland, OR","range":"September 2017 - November 2017","url":"http://www.sharpenergy.net/"},"html":"<p>Worked on designing, developing, and integrating a market-ready control system to remotely control and monitor solar tracking assembly.</p>\n<ul>\n<li>Developed an open-source control platform to track the location of the sun based on different sensor data extracted locally.</li>\n<li>Translated given requirements to an actual working prototype. That includes researching appropriate MCU and sensors to accomplish a given set of specifications.</li>\n<li>Interfaced WiFi chip to send/receive critical alert messages during extreme weather conditions. During normal operation, the current state of the solar panel and sensor data was logged on a remote server.</li>\n<li>Improved the existing system with more reliable and scalable solutions. One such example was the time tracking methodology, the dependency on the GPS module was replaced with a more reliable RTC module with a 30% improvement in performance.</li>\n<li>Customized vendor-supplied drivers to achieve the required output and performance.</li>\n<li>Assisted in designing a PCB layout for the control system. The PCB accommodates the MCU along with different sensors, encoders, and relay circuitry.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Firmware Intern","company":"Sigma Solutions","location":"Hyderabad, India","range":"March 2016 - July 2016","url":""},"html":"<ul>\n<li>Created HAL driver drivers and API to send debug messages to host computer using UART port.</li>\n<li>Contributed in developing various projects which involved interfacing peripheral to LPC2148 (ARM7TDMI MCU) using SPI, I2C, and UART communication protocol.</li>\n</ul>"}}]}}}